{"ast":null,"code":"import _regeneratorRuntime from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addArticle),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(mySagaArticlePOST);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { FETCH_ARTICLES, ARTICLES_FETCH_SUCCESS, ARTICLES_FETCH_ERROR, ADD_ARTICLE } from '../constants/action-types-articles'; // import { ENDPOINT } from '../constants/services';\n// import { ENDPOINTARTICLE } from '../constants/article-services';\n// import { ENDPOINTCOMMENT } from '../constants/comment-services';\n\nfunction addArticlePOST(article) {\n  return fetch('http://tdi-api.test:8080/api/article', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.Stringify({\n      title: article.title,\n      description: article.description,\n      user_id: 1\n    })\n  }).then(function (response) {\n    return response.json();\n  });\n}\n\nfunction addArticle(payload) {\n  var articles;\n  return _regeneratorRuntime.wrap(function addArticle$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('POST', payload);\n          _context.prev = 1;\n          _context.next = 4;\n          return call(addArticlePOST, payload);\n\n        case 4:\n          articles = _context.sent;\n          _context.next = 7;\n          return put({\n            type: ARTICLES_FETCH_SUCCESS,\n            payload: articles\n          });\n\n        case 7:\n          console.log('success try catch');\n          _context.next = 15;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n          _context.next = 15;\n          return put({\n            type: ARTICLES_FETCH_ERROR,\n            message: _context.t0.message\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[1, 10]]);\n}\n\nfunction mySagaArticlePOST() {\n  return _regeneratorRuntime.wrap(function mySagaArticlePOST$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('article saga POST');\n          _context2.next = 3;\n          return takeLatest(ADD_ARTICLE, addArticle);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nexport default mySagaArticlePOST;","map":{"version":3,"sources":["/home/emanuel/Desktop/ReactLearning/articlesreact/src/js/sagas/articlesPOST.js"],"names":["addArticle","mySagaArticlePOST","call","put","takeLatest","FETCH_ARTICLES","ARTICLES_FETCH_SUCCESS","ARTICLES_FETCH_ERROR","ADD_ARTICLE","addArticlePOST","article","fetch","method","headers","Accept","body","JSON","Stringify","title","description","user_id","then","response","json","payload","console","log","articles","type","message"],"mappings":";;;;yBAqBUA,U;;;yBAYAC,iB;;AAjCV,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,cAAT,EAAyBC,sBAAzB,EAAiDC,oBAAjD,EAAuEC,WAAvE,QAA0F,oCAA1F,C,CACA;AACA;AACA;;AAEA,SAASC,cAAT,CAAwBC,OAAxB,EAAgC;AAC9B,SAAOC,KAAK,CAAC,sCAAD,EAAwC;AAClDC,IAAAA,MAAM,EAAC,MAD2C;AAElDC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFyC;AAMlDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAER,OAAO,CAACQ,KADI;AAEnBC,MAAAA,WAAW,EAAET,OAAO,CAACS,WAFF;AAGnBC,MAAAA,OAAO,EAAE;AAHU,KAAf;AAN4C,GAAxC,CAAL,CAWJC,IAXI,CAWC,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAXT,CAAP;AAYD;;AAED,SAAUvB,UAAV,CAAqBwB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,OAApB;AADF;AAAA;AAGqB,iBAAMtB,IAAI,CAACO,cAAD,EAAiBe,OAAjB,CAAV;;AAHrB;AAGUG,UAAAA,QAHV;AAAA;AAII,iBAAMxB,GAAG,CAAC;AAACyB,YAAAA,IAAI,EAAEtB,sBAAP;AAA+BkB,YAAAA,OAAO,EAAEG;AAAxC,WAAD,CAAT;;AAJJ;AAKIF,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AALJ;AAAA;;AAAA;AAAA;AAAA;AAOID,UAAAA,OAAO,CAACC,GAAR;AAPJ;AAQI,iBAAMvB,GAAG,CAAC;AAACyB,YAAAA,IAAI,EAAErB,oBAAP;AAA6BsB,YAAAA,OAAO,EAAE,YAAEA;AAAxC,WAAD,CAAT;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SAAU5B,iBAAV;AAAA;AAAA;AAAA;AAAA;AACEwB,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AADF;AAEE,iBAAMtB,UAAU,CAACI,WAAD,EAAcR,UAAd,CAAhB;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeC,iBAAf","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects';\nimport { FETCH_ARTICLES, ARTICLES_FETCH_SUCCESS, ARTICLES_FETCH_ERROR, ADD_ARTICLE } from '../constants/action-types-articles';\n// import { ENDPOINT } from '../constants/services';\n// import { ENDPOINTARTICLE } from '../constants/article-services';\n// import { ENDPOINTCOMMENT } from '../constants/comment-services';\n\nfunction addArticlePOST(article){\n  return fetch('http://tdi-api.test:8080/api/article',{\n    method:'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.Stringify({\n      title: article.title,\n      description: article.description,\n      user_id: 1,\n    })\n  }).then(response => response.json(), );\n}\n\nfunction* addArticle(payload){\n  console.log('POST', payload);\n  try{\n    const articles = yield call(addArticlePOST, payload);\n    yield put({type: ARTICLES_FETCH_SUCCESS, payload: articles});\n    console.log('success try catch');\n  } catch(e){\n    console.log(e);\n    yield put({type: ARTICLES_FETCH_ERROR, message: e.message});\n  }\n}\n\nfunction* mySagaArticlePOST(){\n  console.log('article saga POST');\n  yield takeLatest(ADD_ARTICLE, addArticle);\n}\n\nexport default mySagaArticlePOST;\n"]},"metadata":{},"sourceType":"module"}