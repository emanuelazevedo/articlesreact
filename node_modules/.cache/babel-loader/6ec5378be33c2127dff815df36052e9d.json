{"ast":null,"code":"import _classCallCheck from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/emanuel/Desktop/ReactLearning/articlesreact/src/js/components/Callback.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchToken as _fetchToken, fetchUserSuccess } from \"../actions/auth\";\nimport store from \"../store\";\nimport { USER_ENDPOINT } from \"../constants/services\";\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  // define as actions a executar quando existirem alterações locais que requerem atualização de state\n  return {\n    fetchToken: function fetchToken(code) {\n      return dispatch(_fetchToken(code));\n    },\n    fetchUser: function fetchUser(userAuth) {\n      return dispatch(fetchUserSuccess(userAuth));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  // define as props do componente consoante o state do redux\n  console.log('OLA', state);\n  return {\n    token: state.auth,\n    userAuth: state.userAuth\n  };\n};\n\nvar ConnectedCallback =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConnectedCallback, _Component);\n\n  function ConnectedCallback(match) {\n    var _this;\n\n    _classCallCheck(this, ConnectedCallback);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectedCallback).call(this, match));\n    _this.checkToken = _this.checkToken.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ConnectedCallback, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.token.length > 0) {\n        // obter o code a partir do URL\n        var code = this.props.location.search.substr(6); // invocar o pedido para pedir o novo token a partir do code obtido\n\n        this.props.fetchToken(code);\n      } // verificar alterações à store\n\n\n      store.subscribe(this.checkToken);\n    }\n  }, {\n    key: \"checkToken\",\n    value: function checkToken() {\n      var _this2 = this;\n\n      // verificar se o access_token no state existe\n      console.log('MY TOKEN', store.getState());\n      console.log('STATE', this);\n\n      if (store.getState().auth[0].access_token) {\n        if (store.getState().userAuth.length < 1) {\n          // chamada  para ir buscar o utilizador autenticado\n          //  this.props.fetchUser(store.getState().auth[0].access_token);\n          fetch(USER_ENDPOINT + '/1', {\n            headers: new Headers({\n              'Authorization': 'Bearer ' + store.getState().auth[0].access_token\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (responseData) {\n            console.log('responseData', responseData);\n\n            _this2.props.fetchUser(responseData);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('THIS OTHER SHIT', this.props);\n      console.log('PLEASE', this.props.userAuth.name);\n\n      if (this.props.userAuth > 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, this.props.userAuth.name));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Not logged in\"));\n      }\n    }\n  }]);\n\n  return ConnectedCallback;\n}(Component); // executar a função connect do Redux para:\n// 1) mapear o State do Redux à propriedades locais do componente (mapStateToProps)\n// 2) mapear as ações a serem invocadas às ações locais nas props do componente (mapDispatchToProps)\n\n\nvar Callback = connect(mapStateToProps, mapDispatchToProps)(ConnectedCallback);\nexport default Callback;","map":{"version":3,"sources":["/home/emanuel/Desktop/ReactLearning/articlesreact/src/js/components/Callback.js"],"names":["React","Component","connect","fetchToken","fetchUserSuccess","store","USER_ENDPOINT","mapDispatchToProps","dispatch","code","fetchUser","userAuth","mapStateToProps","state","console","log","token","auth","ConnectedCallback","match","checkToken","bind","props","length","location","search","substr","subscribe","getState","access_token","fetch","headers","Headers","then","response","json","responseData","name","Callback"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {fetchToken, fetchUserSuccess} from \"../actions/auth\"\nimport store from \"../store\";\nimport {USER_ENDPOINT} from \"../constants/services\";\n\nconst mapDispatchToProps = dispatch => {\n    // define as actions a executar quando existirem alterações locais que requerem atualização de state\n    return {\n        fetchToken: code => dispatch(fetchToken(code)),\n        fetchUser: userAuth => dispatch(fetchUserSuccess(userAuth)),\n    };\n};\n\nconst mapStateToProps = state => {\n    // define as props do componente consoante o state do redux\n    console.log('OLA',state);\n    return {\n        token: state.auth,\n        userAuth: state.userAuth,\n    };\n};\n\nclass ConnectedCallback extends Component{\n\n    constructor(match) {\n        super(match);\n        this.checkToken = this.checkToken.bind(this);\n    }\n\n    componentDidMount()\n    {\n        if(!this.props.token.length > 0)\n        {\n            // obter o code a partir do URL\n            let code = this.props.location.search.substr(6);\n\n            // invocar o pedido para pedir o novo token a partir do code obtido\n            this.props.fetchToken(code);\n        }\n\n        // verificar alterações à store\n        store.subscribe(this.checkToken);\n    }\n\n\n    checkToken()\n    {\n        // verificar se o access_token no state existe\n        console.log('MY TOKEN', store.getState());\n        console.log('STATE', this);\n        if(store.getState().auth[0].access_token)\n        {\n\n            if(store.getState().userAuth.length < 1)\n            {// chamada  para ir buscar o utilizador autenticado\n              //  this.props.fetchUser(store.getState().auth[0].access_token);\n               fetch(USER_ENDPOINT+'/1' , {\n                    headers: new Headers({'Authorization': 'Bearer ' + store.getState().auth[0].access_token})\n               }).then(response => response.json(), ).then((responseData) => {\n                   console.log('responseData',responseData);\n                    this.props.fetchUser(responseData);\n               });\n            }\n        }\n    }\n\n    render() {\n        console.log('THIS OTHER SHIT', this.props);\n        console.log('PLEASE', this.props.userAuth.name);\n        if (this.props.userAuth > 0)\n        {\n            return (\n                <div>\n                    <p>{this.props.userAuth.name}</p>\n                </div>\n            );\n        }\n        else\n        {\n            return (\n                <div>\n                    <p>Not logged in</p>\n                </div>\n            );\n        }\n\n    }\n}\n\n// executar a função connect do Redux para:\n// 1) mapear o State do Redux à propriedades locais do componente (mapStateToProps)\n// 2) mapear as ações a serem invocadas às ações locais nas props do componente (mapDispatchToProps)\nconst Callback = connect(mapStateToProps, mapDispatchToProps)(ConnectedCallback);\n\nexport default Callback;\n"]},"metadata":{},"sourceType":"module"}