{"ast":null,"code":"import _defineProperty from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/emanuel/Desktop/ReactLearning/articlesreact/src/js/components/FormComments.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\"; // import uuidv1 from \"uuid\";\n\nimport { addComment as _addComment } from \"../actions/comments\";\nimport { fetchArticle as _fetchArticle } from \"../actions/articleData\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    articleInfo: state.articleInfo\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchArticle: function fetchArticle(article) {\n      return dispatch(_fetchArticle(article));\n    },\n    addComment: function addComment(comment) {\n      return dispatch(_addComment(comment));\n    }\n  };\n};\n\nvar ConnectedForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConnectedForm, _Component);\n\n  function ConnectedForm() {\n    var _this;\n\n    _classCallCheck(this, ConnectedForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectedForm).call(this));\n    _this.state = {\n      commentText: \"\",\n      article_id: \"\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ConnectedForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.id, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var commentText = this.state.commentText;\n      var article_id = this.props.articleInfo.articleInfo.id;\n      ;\n      var id = \"\";\n      this.props.addComment({\n        commentText: commentText,\n        article_id: article_id\n      });\n      console.log('reere', this.props.articleInfo.articleInfo.id);\n      this.setState({\n        commentText: \"\",\n        article_id: this.props.articleInfo.articleInfo.id\n      });\n    } // componentDidMount(){\n    //   //chamada inicial para ir buscar o artigo do ID\n    //   const id = this.props.articleInfo.articleInfo.id;\n    //\n    //   // this.props.fetchArticle({ type: \"FETCH_USER\", article: id });\n    //\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          commentText = _this$state.commentText,\n          article_id = _this$state.article_id;\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Coment\\xE1rio\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"commentText\",\n        value: commentText,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"hidden\",\n        className: \"form-control\",\n        id: \"article_id\",\n        value: this.props.articleInfo.articleInfo.id,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Novo Coment\\xE1rio\")));\n    }\n  }]);\n\n  return ConnectedForm;\n}(Component);\n\nvar FormComments = connect(mapStateToProps, mapDispatchToProps)(ConnectedForm);\nexport default FormComments;","map":{"version":3,"sources":["/home/emanuel/Desktop/ReactLearning/articlesreact/src/js/components/FormComments.js"],"names":["React","Component","connect","addComment","fetchArticle","mapStateToProps","state","articleInfo","mapDispatchToProps","dispatch","article","comment","ConnectedForm","commentText","article_id","handleChange","bind","handleSubmit","event","setState","target","id","value","preventDefault","props","console","log","FormComments"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// import uuidv1 from \"uuid\";\nimport { addComment } from \"../actions/comments\";\nimport { fetchArticle } from \"../actions/articleData\";\n\nconst mapStateToProps = state => {\n\n  return { articleInfo: state.articleInfo };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchArticle: article => dispatch(fetchArticle(article)),\n    addComment: comment => dispatch(addComment(comment)),\n  };\n};\nclass ConnectedForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      commentText: \"\",\n      article_id: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.id]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { commentText } = this.state;\n    const article_id = this.props.articleInfo.articleInfo.id;;\n    const id = \"\";\n    this.props.addComment({ commentText, article_id});\n    console.log('reere', this.props.articleInfo.articleInfo.id);\n    this.setState({ commentText: \"\", article_id: this.props.articleInfo.articleInfo.id});\n  }\n\n  // componentDidMount(){\n  //   //chamada inicial para ir buscar o artigo do ID\n  //   const id = this.props.articleInfo.articleInfo.id;\n  //\n  //   // this.props.fetchArticle({ type: \"FETCH_USER\", article: id });\n  //\n  // }\n\n  render() {\n    const { commentText, article_id } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"col-md-12\">\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Coment√°rio</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"commentText\"\n            value={commentText}\n            onChange={this.handleChange}\n          />\n\n        <input\n          type=\"hidden\"\n          className=\"form-control\"\n          id=\"article_id\"\n          value={this.props.articleInfo.articleInfo.id}\n          onChange={this.handleChange}\n        />\n\n        <button type=\"submit\" className=\"btn btn-success btn-lg\">\n          Novo Coment√°rio\n        </button>\n        </div>\n      </form>\n    );\n  }\n}\nconst FormComments = connect(mapStateToProps, mapDispatchToProps)(ConnectedForm);\nexport default FormComments;\n"]},"metadata":{},"sourceType":"module"}