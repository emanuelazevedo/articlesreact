{"ast":null,"code":"import _regeneratorRuntime from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport mySagaUser from './users';\nimport mySagaComment from './comments';\nimport mySagaArticle from './articles';\nimport mySagaUserInfo from './userDetail';\nimport { fork } from 'redux-saga/effects'; // const sagas = {\n//   ...mySagaUser,\n//   ...mySagaArticle,\n//   ...mySagaComment,\n// }\n//\n// export default function registerWithMiddleware(middleware: { run: Function }) {\n//   for (let name in sagas) {\n//     middleware.run(sagas[name]);\n//   }\n// }\n\nfunction rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return [fork(mySagaUser), fork(mySagaArticle), fork(mySagaComment)];\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["/home/emanuel/Desktop/ReactLearning/articlesreact/src/js/sagas/index.js"],"names":["rootSaga","mySagaUser","mySagaComment","mySagaArticle","mySagaUserInfo","fork"],"mappings":";;;;yBAiBUA,Q;;AAjBV,OAAOC,UAAP,MAAuB,SAAvB;AACA,OAAOC,aAAP,MAA0B,YAA1B;AACA,OAAOC,aAAP,MAA0B,YAA1B;AACA,OAAOC,cAAP,MAA2B,cAA3B;AACA,SAASC,IAAT,QAAqB,oBAArB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAUL,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAM,CACJK,IAAI,CAACJ,UAAD,CADA,EAEJI,IAAI,CAACF,aAAD,CAFA,EAGJE,IAAI,CAACH,aAAD,CAHA,CAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeF,QAAf","sourcesContent":["import mySagaUser from './users';\nimport mySagaComment from './comments';\nimport mySagaArticle from './articles';\nimport mySagaUserInfo from './userDetail';\nimport { fork } from 'redux-saga/effects';\n// const sagas = {\n//   ...mySagaUser,\n//   ...mySagaArticle,\n//   ...mySagaComment,\n// }\n//\n// export default function registerWithMiddleware(middleware: { run: Function }) {\n//   for (let name in sagas) {\n//     middleware.run(sagas[name]);\n//   }\n// }\n\nfunction* rootSaga() {\n  yield [\n    fork(mySagaUser),\n    fork(mySagaArticle),\n    fork(mySagaComment),\n  ]\n}\n\nexport default rootSaga;\n"]},"metadata":{},"sourceType":"module"}