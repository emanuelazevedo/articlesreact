{"ast":null,"code":"import _regeneratorRuntime from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchComments),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(mySagaComment);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { FETCH_COMMENTS, COMMENTS_FETCH_SUCCESS, COMMENTS_FETCH_ERROR } from '../constants/action-types-comments';\n\nfunction fetchAll() {\n  return fetch('http://tdi-api.test:8080/api/comment').then(function (response) {\n    return response.json();\n  });\n}\n\nfunction fetchComments() {\n  var comments;\n  return _regeneratorRuntime.wrap(function fetchComments$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(fetchAll);\n\n        case 3:\n          comments = _context.sent;\n          _context.next = 6;\n          return put({\n            type: COMMENTS_FETCH_SUCCESS,\n            payload: comments\n          });\n\n        case 6:\n          console.log('success try catch');\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 14;\n          return put({\n            type: COMMENTS_FETCH_ERROR,\n            message: _context.t0.message\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 9]]);\n}\n\nfunction mySagaComment() {\n  return _regeneratorRuntime.wrap(function mySagaComment$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('comment saga init');\n          _context2.next = 3;\n          return takeLatest(FETCH_COMMENTS, fetchComments);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nexport default mySagaComment;","map":{"version":3,"sources":["/home/emanuel/Desktop/ReactLearning/articlesreact/src/js/sagas/comments.js"],"names":["fetchComments","mySagaComment","call","put","takeLatest","FETCH_COMMENTS","COMMENTS_FETCH_SUCCESS","COMMENTS_FETCH_ERROR","fetchAll","fetch","then","response","json","comments","type","payload","console","log","message"],"mappings":";;;;yBAOUA,a;;;yBAWAC,a;;AAlBV,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,cAAT,EAAyBC,sBAAzB,EAAiDC,oBAAjD,QAA6E,oCAA7E;;AAEA,SAASC,QAAT,GAAmB;AACjB,SAAOC,KAAK,CAAC,sCAAD,CAAL,CAA8CC,IAA9C,CAAmD,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAA3D,CAAP;AACD;;AAED,SAAUZ,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAME,IAAI,CAACM,QAAD,CAAV;;AAFrB;AAEUK,UAAAA,QAFV;AAAA;AAGI,iBAAMV,GAAG,CAAC;AAACW,YAAAA,IAAI,EAAER,sBAAP;AAA+BS,YAAAA,OAAO,EAAEF;AAAxC,WAAD,CAAT;;AAHJ;AAIIG,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAJJ;AAAA;;AAAA;AAAA;AAAA;AAMID,UAAAA,OAAO,CAACC,GAAR;AANJ;AAOI,iBAAMd,GAAG,CAAC;AAACW,YAAAA,IAAI,EAAEP,oBAAP;AAA6BW,YAAAA,OAAO,EAAE,YAAEA;AAAxC,WAAD,CAAT;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAUjB,aAAV;AAAA;AAAA;AAAA;AAAA;AACEe,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AADF;AAEE,iBAAMb,UAAU,CAACC,cAAD,EAAiBL,aAAjB,CAAhB;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeC,aAAf","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects';\nimport { FETCH_COMMENTS, COMMENTS_FETCH_SUCCESS, COMMENTS_FETCH_ERROR } from '../constants/action-types-comments';\n\nfunction fetchAll(){\n  return fetch('http://tdi-api.test:8080/api/comment').then(response => response.json(), );\n}\n\nfunction* fetchComments(){\n  try{\n    const comments = yield call(fetchAll);\n    yield put({type: COMMENTS_FETCH_SUCCESS, payload: comments});\n    console.log('success try catch');\n  } catch(e){\n    console.log(e);\n    yield put({type: COMMENTS_FETCH_ERROR, message: e.message});\n  }\n}\n\nfunction* mySagaComment(){\n  console.log('comment saga init');\n  yield takeLatest(FETCH_COMMENTS, fetchComments);\n}\n\nexport default mySagaComment;\n"]},"metadata":{},"sourceType":"module"}