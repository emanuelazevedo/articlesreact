{"ast":null,"code":"import _regeneratorRuntime from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchUsers),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchArticles),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchComments),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(mySagaUser);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { FETCH_USERS, USERS_FETCH_SUCCESS, USERS_FETCH_ERROR } from '../constants/action-types-users';\nimport { FETCH_COMMENTS, COMMENTS_FETCH_SUCCESS, COMMENTS_FETCH_ERROR } from '../constants/action-types-comments';\nimport { FETCH_ARTICLES, ARTICLES_FETCH_SUCCESS, ARTICLES_FETCH_ERROR } from '../constants/action-types-articles'; // import { ENDPOINT } from '../constants/services';\n// import { ENDPOINTUSER } from '../constants/user-services';\n// import { ENDPOINTCOMMENT } from '../constants/comment-services';\n\nfunction fetchAll() {\n  return fetch('http://tdi-api.test:8080/api/user').then(function (response) {\n    return response.json();\n  });\n}\n\nfunction fetchUsers() {\n  var users;\n  return _regeneratorRuntime.wrap(function fetchUsers$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log('HEY HEY HEY');\n          _context.next = 4;\n          return call(fetchAll);\n\n        case 4:\n          users = _context.sent;\n          _context.next = 7;\n          return put({\n            type: USERS_FETCH_SUCCESS,\n            payload: users\n          });\n\n        case 7:\n          console.log('success try catch');\n          _context.next = 15;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 15;\n          return put({\n            type: USERS_FETCH_ERROR,\n            message: _context.t0.message\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 10]]);\n}\n/*ARTICLES*/\n\n\nfunction fetchAll() {\n  return fetch('http://tdi-api.test:8080/api/article').then(function (response) {\n    return response.json();\n  });\n}\n\nfunction fetchArticles() {\n  var articles;\n  return _regeneratorRuntime.wrap(function fetchArticles$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          console.log('HEY HEY HEY');\n          _context2.next = 4;\n          return call(fetchAll);\n\n        case 4:\n          articles = _context2.sent;\n          _context2.next = 7;\n          return put({\n            type: ARTICLES_FETCH_SUCCESS,\n            payload: articles\n          });\n\n        case 7:\n          console.log('success try catch');\n          _context2.next = 15;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          _context2.next = 15;\n          return put({\n            type: ARTICLES_FETCH_ERROR,\n            message: _context2.t0.message\n          });\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[0, 10]]);\n}\n/*COMMENT*/\n\n\nfunction fetchAll() {\n  return fetch('http://tdi-api.test:8080/api/comment').then(function (response) {\n    return response.json();\n  });\n}\n\nfunction fetchComments() {\n  var comments;\n  return _regeneratorRuntime.wrap(function fetchComments$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log('HEY HEY HEY');\n          _context3.next = 4;\n          return call(fetchAll);\n\n        case 4:\n          comments = _context3.sent;\n          _context3.next = 7;\n          return put({\n            type: COMMENTS_FETCH_SUCCESS,\n            payload: comments\n          });\n\n        case 7:\n          console.log('success try catch');\n          _context3.next = 15;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          _context3.next = 15;\n          return put({\n            type: COMMENTS_FETCH_ERROR,\n            message: _context3.t0.message\n          });\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this, [[0, 10]]);\n}\n\nfunction mySagaUser() {\n  return _regeneratorRuntime.wrap(function mySagaUser$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log('user saga init');\n          _context4.next = 3;\n          return takeLatest([takeLatest(FETCH_USERS, fetchUsers), takeLatest(FETCH_COMMENTS, fetchComments), takeLatest(FETCH_ARTICLES, fetchArticles)]);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this);\n}\n\nexport default mySagaUser;","map":{"version":3,"sources":["/home/emanuel/Desktop/ReactLearning/articlesreact/src/js/sagas/users.js"],"names":["fetchUsers","fetchArticles","fetchComments","mySagaUser","call","put","takeLatest","FETCH_USERS","USERS_FETCH_SUCCESS","USERS_FETCH_ERROR","FETCH_COMMENTS","COMMENTS_FETCH_SUCCESS","COMMENTS_FETCH_ERROR","FETCH_ARTICLES","ARTICLES_FETCH_SUCCESS","ARTICLES_FETCH_ERROR","fetchAll","fetch","then","response","json","console","log","users","type","payload","message","articles","comments"],"mappings":"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","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects';\nimport { FETCH_USERS, USERS_FETCH_SUCCESS, USERS_FETCH_ERROR } from '../constants/action-types-users';\nimport { FETCH_COMMENTS, COMMENTS_FETCH_SUCCESS, COMMENTS_FETCH_ERROR } from '../constants/action-types-comments';\nimport { FETCH_ARTICLES, ARTICLES_FETCH_SUCCESS, ARTICLES_FETCH_ERROR } from '../constants/action-types-articles';\n// import { ENDPOINT } from '../constants/services';\n// import { ENDPOINTUSER } from '../constants/user-services';\n// import { ENDPOINTCOMMENT } from '../constants/comment-services';\n\nfunction fetchAll(){\n  return fetch('http://tdi-api.test:8080/api/user').then(response => response.json(), );\n}\n\nfunction* fetchUsers(){\n  try{\n    console.log('HEY HEY HEY');\n    const users = yield call(fetchAll);\n    yield put({type: USERS_FETCH_SUCCESS, payload: users});\n    console.log('success try catch');\n  } catch(e){\n    console.log(e);\n    yield put({type: USERS_FETCH_ERROR, message: e.message});\n  }\n}\n\n/*ARTICLES*/\nfunction fetchAll(){\n  return fetch('http://tdi-api.test:8080/api/article').then(response => response.json(), );\n}\n\nfunction* fetchArticles(){\n  try{\n    console.log('HEY HEY HEY');\n    const articles = yield call(fetchAll);\n    yield put({type: ARTICLES_FETCH_SUCCESS, payload: articles});\n    console.log('success try catch');\n  } catch(e){\n    console.log(e);\n    yield put({type: ARTICLES_FETCH_ERROR, message: e.message});\n  }\n}\n\n/*COMMENT*/\nfunction fetchAll(){\n  return fetch('http://tdi-api.test:8080/api/comment').then(response => response.json(), );\n}\n\nfunction* fetchComments(){\n  try{\n    console.log('HEY HEY HEY');\n    const comments = yield call(fetchAll);\n    yield put({type: COMMENTS_FETCH_SUCCESS, payload: comments});\n    console.log('success try catch');\n  } catch(e){\n    console.log(e);\n    yield put({type: COMMENTS_FETCH_ERROR, message: e.message});\n  }\n}\n\n\nfunction* mySagaUser(){\n  console.log('user saga init');\n  yield takeLatest([\n    takeLatest(FETCH_USERS, fetchUsers),\n    takeLatest(FETCH_COMMENTS, fetchComments),\n    takeLatest(FETCH_ARTICLES, fetchArticles),\n  ]);\n}\n\nexport default mySagaUser;\n"]},"metadata":{},"sourceType":"module"}