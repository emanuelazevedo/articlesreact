{"ast":null,"code":"import _regeneratorRuntime from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(deleteComment),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(mySagaCommentDELETE);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { FETCH_COMMENTS, COMMENTS_FETCH_SUCCESS, COMMENTS_FETCH_ERROR, DELETE_COMMENT } from '../constants/action-types-comments';\n\nfunction deleteThisComment(id) {\n  return fetch('http://tdi-api.test:8080/api/comment/' + id, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    return response.json();\n  });\n}\n\nfunction deleteComment(action) {\n  var id, comments;\n  return _regeneratorRuntime.wrap(function deleteComment$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = action.payload.id;\n          console.log('DELETE', id);\n          _context.prev = 2;\n          _context.next = 5;\n          return call(deleteThisComment, id);\n\n        case 5:\n          comments = _context.sent;\n          // yield put({type: COMMENTS_FETCH_SUCCESS, payload: comments});\n          console.log('success DELETE');\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](2);\n          console.log('Error', _context.t0);\n          _context.next = 14;\n          return put({\n            type: COMMENTS_FETCH_ERROR,\n            message: _context.t0.message\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[2, 9]]);\n}\n\nfunction mySagaCommentDELETE() {\n  return _regeneratorRuntime.wrap(function mySagaCommentDELETE$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('comment saga DELETE');\n          _context2.next = 3;\n          return takeLatest(DELETE_COMMENT, deleteComment);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nexport default mySagaCommentDELETE;","map":{"version":3,"sources":["/home/emanuel/Desktop/ReactLearning/articlesreact/src/js/sagas/commentsDELETE.js"],"names":["deleteComment","mySagaCommentDELETE","call","put","takeLatest","FETCH_COMMENTS","COMMENTS_FETCH_SUCCESS","COMMENTS_FETCH_ERROR","DELETE_COMMENT","deleteThisComment","id","fetch","method","headers","Accept","then","response","json","action","payload","console","log","comments","type","message"],"mappings":";;;;yBAaUA,a;;;yBAaAC,mB;;AA1BV,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,cAAT,EAAyBC,sBAAzB,EAAiDC,oBAAjD,EAAuEC,cAAvE,QAA6F,oCAA7F;;AAEA,SAASC,iBAAT,CAA2BC,EAA3B,EAA8B;AAC5B,SAAOC,KAAK,CAAC,0CAAwCD,EAAzC,EAA4C;AACtDE,IAAAA,MAAM,EAAE,QAD8C;AAEtDC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT;AAF6C,GAA5C,CAAL,CAMJC,IANI,CAMC,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GANT,CAAP;AAOD;;AAED,SAAUjB,aAAV,CAAwBkB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACQR,UAAAA,EADR,GACaQ,MAAM,CAACC,OAAP,CAAeT,EAD5B;AAEEU,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,EAAtB;AAFF;AAAA;AAIqB,iBAAMR,IAAI,CAACO,iBAAD,EAAoBC,EAApB,CAAV;;AAJrB;AAIUY,UAAAA,QAJV;AAKI;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AANJ;AAAA;;AAAA;AAAA;AAAA;AAQID,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AARJ;AASI,iBAAMlB,GAAG,CAAC;AAACoB,YAAAA,IAAI,EAAEhB,oBAAP;AAA6BiB,YAAAA,OAAO,EAAE,YAAEA;AAAxC,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUvB,mBAAV;AAAA;AAAA;AAAA;AAAA;AACEmB,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AADF;AAEE,iBAAMjB,UAAU,CAACI,cAAD,EAAiBR,aAAjB,CAAhB;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeC,mBAAf","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects';\nimport { FETCH_COMMENTS, COMMENTS_FETCH_SUCCESS, COMMENTS_FETCH_ERROR, DELETE_COMMENT } from '../constants/action-types-comments';\n\nfunction deleteThisComment(id){\n  return fetch('http://tdi-api.test:8080/api/comment/'+id,{\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  }).then(response => response.json(), );\n}\n\nfunction* deleteComment(action){\n  const id = action.payload.id;\n  console.log('DELETE', id);\n  try{\n    const comments = yield call(deleteThisComment, id);\n    // yield put({type: COMMENTS_FETCH_SUCCESS, payload: comments});\n    console.log('success DELETE');\n  } catch(e){\n    console.log('Error', e);\n    yield put({type: COMMENTS_FETCH_ERROR, message: e.message});\n  }\n}\n\nfunction* mySagaCommentDELETE(){\n  console.log('comment saga DELETE');\n  yield takeLatest(DELETE_COMMENT, deleteComment);\n}\n\nexport default mySagaCommentDELETE;\n"]},"metadata":{},"sourceType":"module"}