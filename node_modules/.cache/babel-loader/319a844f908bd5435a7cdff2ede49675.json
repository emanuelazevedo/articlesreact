{"ast":null,"code":"import _regeneratorRuntime from \"/home/emanuel/Desktop/ReactLearning/articlesreact/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addComment),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(mySagaCommentPOST);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { FETCH_COMMENTS, COMMENTS_FETCH_SUCCESS, COMMENTS_FETCH_ERROR, ADD_COMMENT } from '../constants/action-types-comments'; // import { ENDPOINT } from '../constants/services';\n// import { ENDPOINTCOMMENT } from '../constants/comment-services';\n// import { ENDPOINTCOMMENT } from '../constants/comment-services';\n\nfunction addCommentPOST(comment) {\n  console.log('response', JSON.stringify({\n    commentText: comment.payload.commentText,\n    article_id: comment.payload.article_id,\n    user_id: 2\n  }));\n  return fetch('http://tdi-api.test:8080/api/comment', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      commentText: comment.payload.commentText,\n      article_id: comment.payload.article_id,\n      user_id: 2\n    })\n  }).then(function (response) {\n    return response.json();\n  });\n}\n\nfunction addComment(comment) {\n  var comments;\n  return _regeneratorRuntime.wrap(function addComment$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('POSTComment', comment);\n          _context.prev = 1;\n          _context.next = 4;\n          return call(addCommentPOST, comment);\n\n        case 4:\n          comments = _context.sent;\n          // yield put({type: COMMENTS_FETCH_SUCCESS, payload: comments});\n          console.log('success try catch');\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n          _context.next = 13;\n          return put({\n            type: COMMENTS_FETCH_ERROR,\n            message: _context.t0.message\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[1, 8]]);\n}\n\nfunction mySagaCommentPOST() {\n  return _regeneratorRuntime.wrap(function mySagaCommentPOST$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('comment saga POST');\n          _context2.next = 3;\n          return takeLatest(ADD_COMMENT, addComment);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nexport default mySagaCommentPOST;","map":{"version":3,"sources":["/home/emanuel/Desktop/ReactLearning/articlesreact/src/js/sagas/commentsPOST.js"],"names":["addComment","mySagaCommentPOST","call","put","takeLatest","FETCH_COMMENTS","COMMENTS_FETCH_SUCCESS","COMMENTS_FETCH_ERROR","ADD_COMMENT","addCommentPOST","comment","console","log","JSON","stringify","commentText","payload","article_id","user_id","fetch","method","headers","Accept","body","then","response","json","comments","type","message"],"mappings":";;;;yBA0BUA,U;;;yBAYAC,iB;;AAtCV,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,cAAT,EAAyBC,sBAAzB,EAAiDC,oBAAjD,EAAuEC,WAAvE,QAA0F,oCAA1F,C,CACA;AACA;AACA;;AAEA,SAASC,cAAT,CAAwBC,OAAxB,EAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,IAAI,CAACC,SAAL,CAAe;AACrCC,IAAAA,WAAW,EAAEL,OAAO,CAACM,OAAR,CAAgBD,WADQ;AAErCE,IAAAA,UAAU,EAAEP,OAAO,CAACM,OAAR,CAAgBC,UAFS;AAGrCC,IAAAA,OAAO,EAAE;AAH4B,GAAf,CAAxB;AAKA,SAAOC,KAAK,CAAC,sCAAD,EAAwC;AAClDC,IAAAA,MAAM,EAAC,MAD2C;AAElDC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFyC;AAMlDC,IAAAA,IAAI,EAAEV,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,WAAW,EAAEL,OAAO,CAACM,OAAR,CAAgBD,WADV;AAEnBE,MAAAA,UAAU,EAAEP,OAAO,CAACM,OAAR,CAAgBC,UAFT;AAGnBC,MAAAA,OAAO,EAAE;AAHU,KAAf;AAN4C,GAAxC,CAAL,CAWJM,IAXI,CAWC,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAXT,CAAP;AAYD;;AAED,SAAU1B,UAAV,CAAqBU,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,OAA3B;AADF;AAAA;AAGqB,iBAAMR,IAAI,CAACO,cAAD,EAAiBC,OAAjB,CAAV;;AAHrB;AAGUiB,UAAAA,QAHV;AAII;AACAhB,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AALJ;AAAA;;AAAA;AAAA;AAAA;AAOID,UAAAA,OAAO,CAACC,GAAR;AAPJ;AAQI,iBAAMT,GAAG,CAAC;AAACyB,YAAAA,IAAI,EAAErB,oBAAP;AAA6BsB,YAAAA,OAAO,EAAE,YAAEA;AAAxC,WAAD,CAAT;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SAAU5B,iBAAV;AAAA;AAAA;AAAA;AAAA;AACEU,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AADF;AAEE,iBAAMR,UAAU,CAACI,WAAD,EAAcR,UAAd,CAAhB;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeC,iBAAf","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects';\nimport { FETCH_COMMENTS, COMMENTS_FETCH_SUCCESS, COMMENTS_FETCH_ERROR, ADD_COMMENT } from '../constants/action-types-comments';\n// import { ENDPOINT } from '../constants/services';\n// import { ENDPOINTCOMMENT } from '../constants/comment-services';\n// import { ENDPOINTCOMMENT } from '../constants/comment-services';\n\nfunction addCommentPOST(comment){\n  console.log('response', JSON.stringify({\n    commentText: comment.payload.commentText,\n    article_id: comment.payload.article_id,\n    user_id: 2,\n  }));\n  return fetch('http://tdi-api.test:8080/api/comment',{\n    method:'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      commentText: comment.payload.commentText,\n      article_id: comment.payload.article_id,\n      user_id: 2,\n    })\n  }).then(response => response.json(), );\n}\n\nfunction* addComment(comment){\n  console.log('POSTComment', comment);\n  try{\n    const comments = yield call(addCommentPOST, comment);\n    // yield put({type: COMMENTS_FETCH_SUCCESS, payload: comments});\n    console.log('success try catch');\n  } catch(e){\n    console.log(e);\n    yield put({type: COMMENTS_FETCH_ERROR, message: e.message});\n  }\n}\n\nfunction* mySagaCommentPOST(){\n  console.log('comment saga POST');\n  yield takeLatest(ADD_COMMENT, addComment);\n}\n\nexport default mySagaCommentPOST;\n"]},"metadata":{},"sourceType":"module"}